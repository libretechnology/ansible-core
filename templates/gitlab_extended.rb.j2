# The URL through which GitLab will be accessed.
external_url '{{ gitlab_external_url }}'

# gitlab.yml configuration
gitlab_rails['time_zone'] = "{{ gitlab_time_zone }}"
gitlab_rails['gitlab_email_enabled'] = {{ gitlab_email_enabled }}
{% if gitlab_email_enabled == "true" %}
gitlab_rails['gitlab_email_from'] = "{{ gitlab_email_from }}"
gitlab_rails['gitlab_email_display_name'] = "{{ gitlab_email_display_name }}"
gitlab_rails['gitlab_email_reply_to'] = "{{ gitlab_email_reply_to }}"
{% endif %}

# Default Theme
gitlab_rails['gitlab_default_theme'] = "{{ gitlab_default_theme }}"

# Whether to redirect http to https.
nginx['redirect_http_to_https'] = {{ gitlab_redirect_http_to_https }}
{% if gitlab_letsencrypt_enabled != "true" %}
nginx['ssl_certificate'] = "{{ gitlab_ssl_certificate }}"
nginx['ssl_certificate_key'] = "{{ gitlab_ssl_certificate_key }}"
{% endif %}

# The directory where Git repositories will be stored.
git_data_dirs({"default" => {"path" => "{{ gitlab_git_data_dir }}"} })

# The directory where Gitlab backups will be stored
gitlab_rails['backup_keep_time'] = {{ gitlab_backup_keep_time }}
gitlab_rails['backup_path'] = "{{ gitlab_backup_path }}"
gitlab_rails['manage_backup_path'] = {{ gitlab_manage_backup_path }}
gitlab_rails['backup_archive_permissions'] = {{ gitlab_backup_permissions }}

#### GitLab user privileges
gitlab_rails['gitlab_default_can_create_group'] = {{ gitlab_can_create_group }}
gitlab_rails['gitlab_username_changing_enabled'] = {{ gitlab_change_username }}

#### Impersonation settings
gitlab_rails['impersonation_enabled'] = {{ gitlab_impersonation_enabled }}
#

#### Default project feature settings
gitlab_rails['gitlab_default_projects_features_issues'] = {{ gitlab_project_issues }}
gitlab_rails['gitlab_default_projects_features_merge_requests'] = {{ gitlab_project_merge_request }}
gitlab_rails['gitlab_default_projects_features_wiki'] = {{ gitlab_project_wiki }}
gitlab_rails['gitlab_default_projects_features_snippets'] = {{ gitlab_project_snippets }}
gitlab_rails['gitlab_default_projects_features_builds'] = {{ gitlab_project_builds }}
gitlab_rails['gitlab_default_projects_features_container_registry'] = {{ gitlab_project_container_registry }}

#### Automatic issue closing
####! See https://docs.gitlab.com/ce/customization/issue_closing.html for more
####! information about this pattern.
{% if gitlab_issues_closing_enabled == "true" %}
gitlab_rails['gitlab_issue_closing_pattern'] = "\b((?:[Cc]los(?:e[sd]?|ing)|\b[Ff]ix(?:e[sd]|ing)?|\b[Rr]esolv(?:e[sd]?|ing)|\b[Ii]mplement(?:s|ed|ing)?)(:?) +(?:(?:issues? +)?%{issue_ref}(?:(?:, *| +and +)?)|([A-Z][A-Z0-9_]+-\d+))+)"
{% endif %}
#

#################################################################################
## Let's Encrypt integration
#################################################################################
{% if gitlab_letsencrypt_enabled == "true" %}
letsencrypt['enable'] = true
letsencrypt['contact_emails'] = ['{{ sysop_email }}']
letsencrypt['group'] = 'root'
letsencrypt['key_size'] = 2048
letsencrypt['owner'] = 'root'
letsencrypt['wwwroot'] = '/var/opt/gitlab/nginx/www'
letsencrypt['auto_renew'] = true
letsencrypt['auto_renew_hour'] = 0
letsencrypt['auto_renew_minute'] = 0 # Should be a number or cron expression, if specified.
letsencrypt['auto_renew_day_of_month'] = "*/4"
nginx['custom_gitlab_server_config'] = "location ^~ /.well-known { root /var/www/letsencrypt; }"
{% endif %}

#### Download location
####! When a user clicks e.g. 'Download zip' on a project, a temporary zip file
####! is created in the following directory.
####! Should not be the same path, or a sub directory of any of the `git_data_dirs`
gitlab_rails['gitlab_repository_downloads_path'] = '{{ gitlab_download_path }}'


# These settings are documented in more detail at
# https://gitlab.com/gitlab-org/gitlab-ce/blob/master/config/gitlab.yml.example#L118
gitlab_rails['ldap_enabled'] = {{ gitlab_ldap_enabled }}
gitlab_rails['ldap_host'] = '{{ gitlab_ldap_host }}'
gitlab_rails['ldap_port'] = {{ gitlab_ldap_port }}
gitlab_rails['ldap_uid'] = '{{ gitlab_ldap_uid }}'
gitlab_rails['ldap_method'] = '{{ gitlab_ldap_method}}' # 'ssl' or 'plain'
gitlab_rails['ldap_bind_dn'] = '{{ gitlab_ldap_bind_dn }}'
gitlab_rails['ldap_password'] = '{{ gitlab_ldap_password }}'
gitlab_rails['ldap_allow_username_or_email_login'] = true
gitlab_rails['ldap_base'] = '{{ gitlab_ldap_base }}'

#### Auxiliary jobs
####! Periodically executed jobs, to self-heal Gitlab, do external
####! synchronizations, etc.
####! Docs: https://github.com/ondrejbartas/sidekiq-cron#adding-cron-job
####!       https://docs.gitlab.com/ce/ci/yaml/README.html#artifacts:expire_in
gitlab_rails['stuck_ci_jobs_worker_cron'] = "0 0 * * *"
gitlab_rails['expire_build_artifacts_worker_cron'] = "50 * * * *"
gitlab_rails['pipeline_schedule_worker_cron'] = "19 * * * *"
gitlab_rails['ci_archive_traces_cron_worker_cron'] = "17 * * * *"
gitlab_rails['repository_check_worker_cron'] = "20 * * * *"
gitlab_rails['admin_email_worker_cron'] = "0 0 * * 0"
gitlab_rails['repository_archive_cache_worker_cron'] = "0 * * * *"
gitlab_rails['pages_domain_verification_cron_worker'] = "*/15 * * * *"
gitlab_rails['pages_domain_ssl_renewal_cron_worker'] = "*/10 * * * *"
gitlab_rails['pages_domain_removal_cron_worker'] = "47 0 * * *"
gitlab_rails['schedule_migrate_external_diffs_worker_cron'] = "15 * * * *"
#

### Monitoring settings
####! IP whitelist controlling access to monitoring endpoints
gitlab_rails['monitoring_whitelist'] = ['127.0.0.0/8', '::1/128']

#### Usage Statistics
gitlab_rails['usage_ping_enabled'] = true
#

# GitLab Nginx
## See https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/doc/settings/nginx.md
{% if gitlab_nginx_listen_port is defined %}
nginx['listen_port'] = "{{ gitlab_nginx_listen_port }}"
{% endif %}
{% if gitlab_nginx_listen_https is defined %}
nginx['listen_https'] = {{ gitlab_nginx_listen_https }}
{% endif %}

# Use smtp instead of sendmail/postfix
# More details and example configuration at
# https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/doc/settings/smtp.md
gitlab_rails['smtp_enable'] = {{ gitlab_smtp_enable }}
gitlab_rails['smtp_address'] = '{{ gitlab_smtp_address }}'
gitlab_rails['smtp_port'] = {{ gitlab_smtp_port }}
{% if gitlab_smtp_address != "localhost" %}
gitlab_rails['smtp_user_name'] = '{{ gitlab_smtp_user_name }}'
gitlab_rails['smtp_password'] = '{{ gitlab_smtp_password }}'
{% endif %}
gitlab_rails['smtp_domain'] = '{{ gitlab_smtp_domain }}'
gitlab_rails['smtp_authentication'] = '{{ gitlab_smtp_authentication }}'
gitlab_rails['smtp_enable_starttls_auto'] = {{ gitlab_smtp_enable_starttls_auto }}
gitlab_rails['smtp_tls'] = {{ gitlab_smtp_tls }}
gitlab_rails['smtp_openssl_verify_mode'] = '{{ gitlab_smtp_openssl_verify_mode }}'
{% if gitlab_smtp_tls != "true" %}
gitlab_rails['smtp_ca_path'] = '{{ gitlab_smtp_ca_path }}'
gitlab_rails['smtp_ca_file'] = '{{ gitlab_smtp_ca_file }}'
{% endif %}

# 2-way SSL Client Authentication.
{% if gitlab_nginx_ssl_verify_client %}
nginx['ssl_verify_client'] = "{{ gitlab_nginx_ssl_verify_client }}"
{% endif %}
{% if gitlab_nginx_ssl_client_certificate %}
nginx['ssl_client_certificate'] = "{{ gitlab_nginx_ssl_client_certificate }}"
{% endif %}

#### GitLab application settings
gitlab_rails['uploads_directory'] = "/var/opt/gitlab/gitlab-rails/uploads"
gitlab_rails['rate_limit_requests_per_period'] = 10
gitlab_rails['rate_limit_period'] = 60
#
##### Change the initial default admin password and shared runner registration tokens.
#####! **Only applicable on initial setup, changing these settings after database
#####!   is created and seeded won't yield any change.**
gitlab_rails['initial_root_password'] = "{{ gitlab_initial_root_pass }}"
## gitlab_rails['initial_shared_runners_registration_token'] = "token"
#

####! **Do not change the following 3 settings unless you know what you are
####!   doing**
gitlab_rails['registry_api_url'] = "http://localhost:5000"
gitlab_rails['registry_key_path'] = "/var/opt/gitlab/gitlab-rails/certificate.key"
gitlab_rails['registry_issuer'] = "omnibus-gitlab-issuer"
#

#################################################################################
### GitLab Workhorse
###! Docs: https://gitlab.com/gitlab-org/gitlab-workhorse/blob/master/README.md
#################################################################################
#
gitlab_workhorse['enable'] = true
gitlab_workhorse['ha'] = false
gitlab_workhorse['listen_network'] = "unix"
gitlab_workhorse['listen_umask'] = 000
gitlab_workhorse['listen_addr'] = "/var/opt/gitlab/gitlab-workhorse/socket"
gitlab_workhorse['auth_backend'] = "http://localhost:8080"
#

#################################################################################
### GitLab Mattermost
###! Docs: https://docs.gitlab.com/omnibus/gitlab-mattermost
#################################################################################
#
{% if gitlab_mattermost_enabled == "true" %}
mattermost_external_url '{{ gitlab_mattermost_external_url }}'
{% endif %}
#
## mattermost['enable'] = false
## mattermost['username'] = 'mattermost'
## mattermost['group'] = 'mattermost'
## mattermost['uid'] = nil
## mattermost['gid'] = nil
## mattermost['home'] = '/var/opt/gitlab/mattermost'
## mattermost['database_name'] = 'mattermost_production'
## mattermost['env'] = {
##   'SSL_CERT_DIR' => "/opt/gitlab/embedded/ssl/certs/"
## }
## mattermost['service_address'] = "127.0.0.1"
## mattermost['service_port'] = "8065"
## mattermost['service_site_url'] = nil
## mattermost['service_allowed_untrusted_internal_connections'] = ""
## mattermost['service_enable_api_team_deletion'] = true
## mattermost['team_site_name'] = "GitLab Mattermost"
## mattermost['sql_driver_name'] = 'mysql'
## mattermost['sql_data_source'] = "mmuser:mostest@tcp(dockerhost:3306)/mattermost_test?charset=utf8mb4,utf8"
## mattermost['log_file_directory'] = '/var/log/gitlab/mattermost/'
## mattermost['gitlab_enable'] = false
## mattermost['gitlab_id'] = "12345656"
## mattermost['gitlab_secret'] = "123456789"
## mattermost['gitlab_scope'] = ""
## mattermost['gitlab_auth_endpoint'] = "http://gitlab.example.com/oauth/authorize"
## mattermost['gitlab_token_endpoint'] = "http://gitlab.example.com/oauth/token"
## mattermost['gitlab_user_api_endpoint'] = "http://gitlab.example.com/api/v4/user"
## mattermost['file_directory'] = "/var/opt/gitlab/mattermost/data"
## mattermost['plugin_directory'] = "/var/opt/gitlab/mattermost/plugins"
## mattermost['plugin_client_directory'] = "/var/opt/gitlab/mattermost/client-plugins"
#
#################################################################################
### Mattermost NGINX
#################################################################################
#
## All the settings defined in the "GitLab Nginx" section are also available in
## this "Mattermost NGINX" section, using the key `mattermost_nginx`.  However,
## those settings should be explicitly set. That is, settings given as
## `nginx['some_setting']` WILL NOT be automatically replicated as
## `mattermost_nginx['some_setting']` and should be set separately.
#
## Below you can find settings that are exclusive to "Mattermost NGINX"
## mattermost_nginx['enable'] = false
#
## mattermost_nginx['custom_gitlab_mattermost_server_config'] = "location ^~ /foo-namespace/bar-project/raw/ {\n deny all;\n}\n"
## mattermost_nginx['proxy_set_headers'] = {
##   "Host" => "$http_host",
##   "X-Real-IP" => "$remote_addr",
##   "X-Forwarded-For" => "$proxy_add_x_forwarded_for",
##   "X-Frame-Options" => "SAMEORIGIN",
##   "X-Forwarded-Proto" => "https",
##   "X-Forwarded-Ssl" => "on",
##   "Upgrade" => "$http_upgrade",
##   "Connection" => "$connection_upgrade"
## }
#

# To change other settings, see:
# https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/README.md#changing-gitlab-yml-settings
