---
# Playbook:     ansible-awxupdate.yml
# Description:  Install/Update awx-controller packages and settings
# Author:       Mauro Rosero P,
# Email:        mrosero@libretechnology.com (mauro.rosero@gmail.com)
# Organization: LIBRETECH, S. A.

- name: ansible-awxupdate.yml
  hosts: awxcentos
  become: true
  gather_facts: yes

  vars:

    base_packages: []
    pip2_packages: []
    pip3_packages: []

    epel_repo_url: "https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ ansible_distribution_major_version }}.noarch.rpm"
    epel_repo_gpg_key_url: "https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-{{ ansible_distribution_major_version }}"
    epel_repofile_path: "/etc/yum.repos.d/epel.repo"
  
  pre_tasks:

  - include_vars: vars/sysop-settings.yml

  - name: Set Timezone server ({{ sysop_timezone }})
    timezone:
      name: '{{ sysop_timezone }}'
  
  - name: Setting RedHat Family Epel Repository
    block:

    - name: Check if EPEL repo is already configured
      stat: 
        path: '{{ epel_repofile_path }}'
      register: epel_repofile_result

    - name: Install EPEL repo.
      yum:
        name: "{{ epel_repo_url }}"
        state: present
      register: result
      when: not epel_repofile_result.stat.exists
 
    - name: Import EPEL GPG key.
      rpm_key:
        key: "{{ epel_repo_gpg_key_url }}"
        state: present
      when: not epel_repofile_result.stat.exists
    
    when: ansible_os_family == 'RedHat'

  - name: Install or Remove base packages
    package:
      name: '{{ item.package }}'
      state: '{{ item.state }}'
    with_items: '{{ base_packages}}' 

  - name: Install or Remove pip2 packages
    pip:
      name: '{{ item.package }}'
      state: '{{ item.state }}'
      executable: pip
    with_items: '{{ pip2_packages}}'

  - name: Install or Remove pip3 packages
    pip:
      name: '{{ item.package }}'
      state: '{{ item.state }}'
      executable: pip3
    with_items: '{{ pip3_packages}}'

  tasks:

  - name: check packages for updates
    shell: yum list updates | awk 'f;/Updated Packages/{f=1;}' | awk '{ print $1 }'
    changed_when: updates.stdout_lines | length > 0
    args:
      warn: false
    register: updates

  - name: display count
    debug:
      msg: "Found {{ updates.stdout_lines | length }} packages to be updated:\n\n{{ updates.stdout }}"


  - name: Update installed packages
    block:
    
    - name: install updates using yum
      yum:
        name: "*"
        state: latest
    
    - name: install yum-utils
      package:
        name: yum-utils
    
    - name: check if reboot is required
      shell: needs-restarting -r
      failed_when: false
      register: reboot_required
      changed_when: false

    when: updates.stdout_lines | length > 0

  - name: Reboot Servers (only  if required)
    block:

    - name: reboot the server if required
      reboot:
        connect_timeout: 600
      ignore_errors: true
      changed_when: false
      register: reboot_result
      
    - name: reboot time
      debug:
        msg: "The system rebooted in {{ reboot_result.elapsed }} seconds."

    when: updates.stdout_lines | length > 0 and reboot_required.rc != 0